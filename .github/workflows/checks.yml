

name: Project ci

on:
  push:
    branches:
      - main
      - develop
      - feature
      - release
      - hotfix
  pull_request:

  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_NAME }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "${HOME}/.local/bin" >> $GITHUB_PATH

    - name: Set environment variables
      run: echo "DJANGO_SETTINGS_MODULE=PostBox.settings.base"

    - name: Install drf-spectacular
      run: |
        poetry add drf-spectacular

    - name: Install Packages & Libraries
      run: |
        poetry install

    - name: Run isort (Import sorting)
      run: |
        poetry run isort . --check --diff

    - name: Run black (Code formatting)
      run: |
        poetry run black . --check

    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432 -U ${{ secrets.PG_USER }}; do
          sleep 1
        done

    - name: Run Django Migration
      run: |
        poetry run python manage.py makemigrations
        poetry run python manage.py migrate

    - name: Wait for DB
      run: |
        poetry run python manage.py wait_for_db

    - name: Test python project
      run: |
        poetry run python manage.py test